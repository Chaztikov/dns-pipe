USE fft
USE rbmat
USE ../parallel
USE oldsymbolic
!USE rtchecks

INTEGER nfl,nfh
IF COMMANDLINE.HI=0 THEN
	ASK nfl,nfh
ELSE
	nfl=atoi(COMMANDLINE(1)); nfh=atoi(COMMANDLINE(2))
END IF

INTEGER CONSTANT nx,ny,nz
REAL CONSTANT alpha0, htcoef, Re
REAL meanpx=0, meanflowx=0, time=0, u_conv=0

FILE data=OPEN("vfield"nfl".dat")
READ BY NAME FROM data nx, ny, nz
READ BY NAME FROM data alpha0, htcoef, Re
READ BY NAME FROM data meanpx OR meanflowx
READ BY NAME FROM data u_conv
READ BY NAME FROM data time
CLOSE data

REAL y(0..ny)
INTEGER iy0(-nz..nz)
FILE field_file
endofheader=1024

field_file=OPEN("vfield"nfl".dat")
POSITION field_file,endofheader
READ BINARY FROM field_file y,iy0(0..nz)
CLOSE field_file
DO iy0(-m)=iy0(m) FOR m=1 TO nz

INTEGER iproc=1,nproc=1
datafile="vfield"nfl".dat"
USE ../pipedata
nsmp=1

SHARED ARRAY(0..nx,-nz..nz,-1..1) OF VELOCITY V
ARRAY(1..ny-1) OF REAL omegaX

SUBROUTINE read_slice(INTEGER iy,jy)
    POSITION field_file,startpos(iy)
    LOOP FOR ix=0 TO nx AND iz=-nz TO nz
      IF iy>=iy0(iz) THEN READ BINARY FROM field_file V(ix,iz,jy) ELSE V(ix,iz,jy)=0
    REPEAT
END read_slice

FILE outfile=CREATE("vort.dat")


        LOOP files FOR n=nfl TO nfh
          V(*,*,*)=0; Vd(*,*,*)=0; Vdp(*,*,*)=0;

          WRITE "vfield"n".dat -> vfield"n".vtk"
          field_file=OPEN("vfield"n".dat")

          DO read_slice(iy,iy-1) FOR iy=1 TO MIN(2,ny)
          LOOP FOR ix=0 TO 0 AND iz=0 TO 0 EXCEPT 0<iy0(iz) !ALL ix AND iz=-nz TO nz EXCEPT 0<iy0(iz)
            V(ix,iz,-1).u = -SUM dc(ABS(iz),1,j)*V(ix,iz,-1+j).u FOR j=1 TO 2
            V(ix,iz,-1).v = -SUM dc(ABS(iz),2,j)*V(ix,iz,-1+j).v FOR j=1 TO 2
            V(ix,iz,-1).w = -SUM dc(ABS(iz),3,j)*V(ix,iz,-1+j).w FOR j=1 TO 2
          REPEAT
          getreal_slice(0,-1); getreal_pert_slice(0,-1)

          LOOP FOR iy=1 TO ny-1
            DO V(*,*,j)=V(*,*,j+1) FOR j=-1 TO 0
            read_slice(iy+1,1)
            WITH V(0,0,*),derivatives(iy):
             omegaX(iy)=[(SUM d1(j)*(w(0+j)*y(0+j)) FOR j=-1 TO 1)].REAL
          REPEAT
          WRITE TO outfile omegaX
          CLOSE field_file
         REPEAT files

CLOSE outfile
